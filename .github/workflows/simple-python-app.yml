name: simple-python-app-github-actions
on: 
  workflow_dispatch:
  push:
    # branches:
    #   - github-actions-python-app  # triggers only when code is pushed to the 'github-actions-python-app' branch
    paths:
      - 'CI-CD/GitHub-Actions/simple-python-app/**'

# Set minimum required permissions for the workflow
permissions:
  contents: read      # needed to checkout code

jobs:
  python-app-build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.13]
    env:
      APP_DIR: CI-CD/GitHub-Actions/simple-python-app
    steps:
      - name: code checkout from github-actions-python-app branch
        uses: actions/checkout@v4
        # with:
        #   ref: github-actions-python-app
      - name: setup python 
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: list content
        run: |
          echo "Current directory: $PWD"
          echo "Files in simple-python-app" && ls $APP_DIR
      - name: install requirements 
        run: |
          FILE=$APP_DIR/requirements.txt
          if [ -f "$FILE" ]; then
            pip install -r "$FILE"
          else
            echo "$FILE not found, skipping install"
          fi
      - name: run app 
        env: 
          NAME: Suyog  #variable input to app.py file
          TESTENV: testenv
        run: |
          python $APP_DIR/app.py
      - name: test app
        #working-directory: CI-CD/GitHub-Actions/simple-python-app
        run: |
          cd $APP_DIR
          python -m unittest discover 
  python-app-deploy:
    runs-on: ubuntu-latest
    needs: python-app-build-and-test
    env:
      APP_DIR: CI-CD/GitHub-Actions/simple-python-app
      IMAGE_NAME: python-app-image
      CONTAINER_NAME: python-app-container
    steps:
      - name: code checkout from github-actions-python-app branch
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      # - name: Log in to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}
      - name: build docker image
        run: |
          docker build -f $APP_DIR/Dockerfile -t $IMAGE_NAME $APP_DIR
          docker images
      - name: run docker container
        run: |
          docker run -d --name $CONTAINER_NAME $IMAGE_NAME
          docker ps
      - name: clean up docker containers
        run: |
          docker stop $CONTAINER_NAME || true
          docker rm $CONTAINER_NAME || true
      - name: Set up KinD cluster
        uses: helm/kind-action@v1.8.0
        with:
          cluster_name: kind
          wait: 120  # waits for the cluster to be ready (default is 60s)
      - name: Load Docker image into KinD
        run: |
          kubectl cluster-info --context kind-chart-testing 
          kubectl get nodes
          for i in {1..5}; do
            kind load docker-image $IMAGE_NAME --name kind && break
            echo "Retrying in 5 seconds..." && sleep 5
          done
      - name: Deploy to Kubernetes via kubectl
        run: |
          kubectl get nodes -A
          kubectl get pods -A
          kubectl apply -f $APP_DIR/k8s-deployment.yaml
          kubectl get pods